services:
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      args:
        # WEB_HOST and WEB_PORT aren't important as we are using nginx
        # to serve the compiled dist on port 80
        # We only need to provide the backend URL:
        PUBLIC_API_URL: 'http://localhost:3035'
    ports:
      - 8085:80
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      test:
        ['CMD-SHELL', 'curl --fail --silent http://localhost:80/healthcheck']
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    ports:
      - 3035:3000
    environment:
      - AUTH_SECRET=please_change_this_in_production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - API_HOST=0.0.0.0
      - API_PORT=3000
      - PUBLIC_WEB_URL=http://localhost:8085
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      test:
        [
          'CMD-SHELL',
          'wget --quiet --spider http://$$API_HOST:$$API_PORT/healthcheck',
        ]
    depends_on:
      - db

  db:
    image: docker.io/postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'postgres']

  drizzle:
    restart: 'no'
    command: /bin/sh
    build:
      context: .
      dockerfile: ./packages/db/Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - TURBO_UI=true
    profiles:
      # Using profile to avoid starting this container this by default.
      # We only want to use this for pnpm db:push to apply the schema
      - drizzle

volumes:
  postgres_data:
