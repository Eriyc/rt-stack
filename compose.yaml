services:
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    ports:
      - 8085:80
    environment:
      - WEB_HOST=0.0.0.0
      - WEB_PORT=80
      - PUBLIC_API_URL=http://localhost:3035
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      test:
        [
          'CMD-SHELL',
          'curl --fail --silent http://$$WEB_HOST:$$WEB_PORT/healthcheck',
        ]
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    ports:
      - 3035:3000
    environment:
      - AUTH_SECRET=please_change_this_in_production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - API_HOST=0.0.0.0
      - API_PORT=3000
      - PUBLIC_WEB_URL=http://localhost:8085
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      test:
        [
          'CMD-SHELL',
          'wget --quiet --spider http://$$API_HOST:$$API_PORT/healthcheck',
        ]
    depends_on:
      - db

  db:
    image: docker.io/postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'postgres']

volumes:
  postgres_data:
